/*
set linesize 1500;
set pagesize 1500;

*/

CREATE VIEW Myview11 AS
select c.customer_id,c.name AS customer_name,c.email,c.phone,c.address,c.date_of_birth,
    p.product_id,p.name AS product_name,p.description,p.price,p.category,
    o.order_id,o.order_date,o.quantity,o.status,
    pm.payment_id,pm.amount,pm.payment_date
from customers c
    JOIN orders o ON c.customer_id = o.customer_id
    JOIN products p ON o.product_id = p.product_id
    LEFT JOIN payments pm ON o.order_id = pm.order_id;


select * from Myview11;













---Retrieve all customers and their associated orders:
select c.customer_id, c.name, o.order_id, o.order_date, o.status
from customers c
JOIN orders o ON c.customer_id = o.customer_id;



---Get the total number of orders placed by each customer:
select c.customer_id, c.name, COUNT(o.order_id) AS order_count
from customers c
LEFT JOIN orders o ON c.customer_id = o.customer_id
GROUP BY c.customer_id, c.name;



---List all products along with their categories:
select p.product_id, p.name, p.category
from products p;



---Retrieve the details of a specific order and its associated customer information:
select o.order_id, o.order_date, o.status, c.name AS customer_name, c.email, c.phone
from orders o
JOIN customers c ON o.customer_id = c.customer_id
WHERE o.order_id = 1;



---Calculate the total amount paid for each order:
select o.order_id, SUM(p.amount) AS total_amount_paid
from orders o
JOIN payments p ON o.order_id = p.order_id
GROUP BY o.order_id;



---Retrieve all customers who have placed orders:
select c.customer_id, c.name, c.email
from customers c
WHERE EXISTS (
    select 1
    from orders o
    WHERE o.customer_id = c.customer_id
);



---List all orders along with the corresponding customer and product details:
select o.order_id, c.name AS customer_name, p.name AS product_name, o.quantity, o.order_date
from orders o
JOIN customers c ON o.customer_id = c.customer_id
JOIN products p ON o.product_id = p.product_id;




---Get the total revenue generated by each product category:
select p.category, SUM(o.quantity * p.price) AS revenue
from orders o
JOIN products p ON o.product_id = p.product_id
GROUP BY p.category;


---Retrieve the latest order placed by each customer:
select c.customer_id, c.name, o.order_id, o.order_date
from customers c
JOIN orders o ON c.customer_id = o.customer_id
WHERE o.order_date = (
    select MAX(order_date)
    from orders
    WHERE customer_id = c.customer_id
);





---PL SQL









---PL/SQL block to calculate and update the total amount paid for each order:
DECLARE
  v_order_id orders.order_id%TYPE;
  v_total_amount NUMBER(10, 2);
BEGIN
  FOR rec IN (select order_id from orders)
  LOOP
    v_order_id := rec.order_id;
    
    select SUM(amount) INTO v_total_amount
    from payments
    WHERE order_id = v_order_id;
    
    UPDATE payments
    SET amount= v_total_amount
    WHERE order_id = v_order_id;
    
    COMMIT;
  END LOOP;
END;
/




--- PL/SQL block to retrieve customer details and the total number of orders placed:
DECLARE
  v_customer_id customers.customer_id%TYPE;
  v_customer_name customers.name%TYPE;
  v_order_count NUMBER;
BEGIN
  FOR rec IN (select customer_id, name from customers)
  LOOP
    v_customer_id := rec.customer_id;
    v_customer_name := rec.name;
    
    select COUNT(*) INTO v_order_count
    from orders
    WHERE customer_id = v_customer_id;
    
    DBMS_OUTPUT.PUT_LINE('Customer Name: ' || v_customer_name);
    DBMS_OUTPUT.PUT_LINE('Total Orders: ' || v_order_count);
    DBMS_OUTPUT.PUT_LINE('-------------------------');
  END LOOP;
END;
/



---PL/SQL block to delete all orders placed by a specific customer:
DECLARE
  v_customer_id customers.customer_id%TYPE:= 1; -- orders of customerid to be deleted
BEGIN
  DELETE from orders
  WHERE customer_id = v_customer_id;
  
  COMMIT;
  
  DBMS_OUTPUT.PUT_LINE('All orders for Customer ID ' || v_customer_id || ' have been deleted.');
END;
/





--- PL/SQL block to retrieve all customers who have pending orders:
DECLARE
  v_customer_id customers.customer_id%TYPE;
  v_customer_name customers.name%TYPE;
BEGIN
  FOR rec IN (select c.customer_id, c.name
              from customers c
              WHERE EXISTS (
                select 1
                from orders o
                WHERE o.customer_id = c.customer_id
                  AND o.status = 'Pending'
              ))
  LOOP
    v_customer_id := rec.customer_id;
    v_customer_name := rec.name;
    
    DBMS_OUTPUT.PUT_LINE('Customer ID: ' || v_customer_id);
    DBMS_OUTPUT.PUT_LINE('Customer Name: ' || v_customer_name);
    DBMS_OUTPUT.PUT_LINE('-------------------------');
  END LOOP;
END;
/


---PL/SQL block to calculate the total revenue generated by each customer:
DECLARE
  v_customer_id customers.customer_id%TYPE;
  v_customer_name customers.name%TYPE;
  v_total_revenue NUMBER(10, 2);
BEGIN
  FOR rec IN (select c.customer_id, c.name
              from customers c
              JOIN orders o ON c.customer_id = o.customer_id
              JOIN products p ON o.product_id = p.product_id)
  LOOP
    v_customer_id := rec.customer_id;
    v_customer_name := rec.name;
    
    select SUM(o.quantity * p.price) INTO v_total_revenue
    from orders o
    JOIN products p ON o.product_id = p.product_id
    WHERE o.customer_id = v_customer_id;
    
    DBMS_OUTPUT.PUT_LINE('Customer ID: ' || v_customer_id);
    DBMS_OUTPUT.PUT_LINE('Customer Name: ' || v_customer_name);
    DBMS_OUTPUT.PUT_LINE('Total Revenue: $' || v_total_revenue);
    DBMS_OUTPUT.PUT_LINE('-------------------------');
  END LOOP;
END;
/

